{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Teck Yi\\\\Desktop\\\\School stuffs\\\\AD Project\\\\Team7-React-Client\\\\src\\\\Component\\\\table\\\\BasicTable.js\",\n    _s = $RefreshSig$();\n\nimport { useTable, usePagination } from 'react-table';\nimport { COLUMNS } from './columns';\nimport axios from \"axios\";\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicTable = () => {\n  _s();\n\n  const [loadingData, setLoadingData] = useState(true);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    async function getData() {\n      await axios.get(\"http://localhost:8080/post/listPost2\").then(response => {\n        // check if the data is populated\n        console.log(response.data);\n        setData(response.data); // you tell it that you had the result\n\n        setLoadingData(false);\n      });\n    }\n\n    if (loadingData) {\n      // if the result is not ready so you make the axios call\n      getData();\n    }\n  }, []);\n  const tableInstance = useTable({\n    columns: COLUMNS,\n    data: data\n  }, usePagination);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    state,\n    prepareRow,\n    setPageSize\n  } = tableInstance;\n  const {\n    pageIndex,\n    pageSize\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n        id: \"cartable\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(headerGroups => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroups.getHeaderGroupProps(),\n            children: headerGroups.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n              children: column.render('Header')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n          children: page.map(row => {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n              children: row.cells.map(cell => {\n                return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps,\n                  children: cell.render(\"Cell\")\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 40\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 21\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      align: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: pageSize,\n        onChange: e => setPageSize(Number(e.target.value)),\n        children: [5, 10, 50, 100].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: pageSize,\n          children: [\"Show \", pageSize]\n        }, pageSize, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => previousPage(),\n        disabled: !canPreviousPage,\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Page \", ' ', /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [pageIndex + 1, \" of \", pageOptions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), ' ']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => nextPage(),\n        disabled: !canNextPage,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicTable, \"D13dBesFLMVe80Nr49MFW0XJ+1Q=\", false, function () {\n  return [useTable];\n});\n\n_c = BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["C:/Users/Teck Yi/Desktop/School stuffs/AD Project/Team7-React-Client/src/Component/table/BasicTable.js"],"names":["useTable","usePagination","COLUMNS","axios","React","useMemo","useState","useEffect","BasicTable","loadingData","setLoadingData","data","setData","getData","get","then","response","console","log","tableInstance","columns","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canPreviousPage","canNextPage","pageOptions","state","prepareRow","setPageSize","pageIndex","pageSize","map","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","e","Number","target","value","length"],"mappings":"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","sourcesContent":["\r\nimport {useTable, usePagination } from 'react-table'\r\nimport {COLUMNS} from './columns'\r\nimport axios from \"axios\";\r\nimport React, { useMemo, useState, useEffect } from \"react\";\r\n\r\nexport const BasicTable = () => {\r\n\r\n    const [loadingData, setLoadingData] = useState(true);\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function getData() {\r\n          await axios\r\n            .get(\"http://localhost:8080/post/listPost2\")\r\n            .then((response) => {\r\n              // check if the data is populated\r\n              console.log(response.data);\r\n              setData(response.data);\r\n              // you tell it that you had the result\r\n              setLoadingData(false);\r\n            });\r\n        }\r\n        if (loadingData) {\r\n          // if the result is not ready so you make the axios call\r\n          getData();\r\n        }\r\n      }, []);\r\n\r\n\r\n    const tableInstance = useTable({\r\n        columns: COLUMNS,\r\n        data: data\r\n    },\r\n    usePagination)\r\n\r\n    const { getTableProps, getTableBodyProps, headerGroups, page,nextPage,\r\n        previousPage,canPreviousPage,canNextPage,pageOptions,state, prepareRow,setPageSize} = tableInstance\r\n\r\n    const {pageIndex, pageSize} = state\r\n\r\n    return (\r\n    <div>\r\n    <div>\r\n    <table {...getTableProps()} id = \"cartable\">\r\n        <thead>\r\n            {\r\n                headerGroups.map((headerGroups)=>(\r\n                <tr {...headerGroups.getHeaderGroupProps()}>\r\n                    {\r\n                        headerGroups.headers.map((column)=>(\r\n                            <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                        ))}\r\n                </tr>\r\n                ))}\r\n        </thead>\r\n        <tbody{...getTableBodyProps()}>\r\n            {\r\n                page.map(row=>{\r\n                    prepareRow(row)\r\n                    return (\r\n                    <tr {...row.getRowProps()}>\r\n                        {\r\n                            row.cells.map(cell =>{\r\n                                return <td{...cell.getCellProps}>{cell.render(\"Cell\")}</td>\r\n                            })\r\n                        }\r\n                    </tr>\r\n                    )\r\n                })\r\n            }\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    <div align =\"center\">\r\n    <select value={pageSize} onChange = {e=> setPageSize(Number(e.target.value))}>\r\n            {\r\n                [5,10,50,100].map(pageSize => (\r\n                    <option key = {pageSize} value = {pageSize}>Show {pageSize}</option>\r\n                ))\r\n            }\r\n    </select>\r\n    <button onClick={() =>previousPage()} disabled ={!canPreviousPage}>Previous</button>\r\n    <span>\r\n        Page {' '}\r\n        <strong>\r\n            {pageIndex +1} of {pageOptions.length}\r\n        </strong>{' '}\r\n    </span>\r\n        <button onClick={() =>nextPage()} disabled ={!canNextPage}>Next</button>\r\n    </div>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}